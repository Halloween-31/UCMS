// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UCMS.DataService.Data;

#nullable disable

namespace UCMS.DataService.Migrations
{
    [DbContext(typeof(UCMSDbContext))]
    [Migration("20250527212610_AddChatAndMessage")]
    partial class AddChatAndMessage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UCMS.Models.DbModels.AIConnectionModels.Chat", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChatId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatId"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.AIConnectionModels.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MessageId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<string>("AIResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("UserRequest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.HasIndex("ChatId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.Code", b =>
                {
                    b.Property<int>("CodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CodeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodeId"));

                    b.Property<string>("CodeValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.HasKey("CodeId");

                    b.HasIndex("DocumentTypeId")
                        .IsUnique();

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.Content", b =>
                {
                    b.Property<int>("ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContentId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContentId"));

                    b.Property<string>("ContentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.HasKey("ContentId");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.ContentProperty", b =>
                {
                    b.Property<int>("ContentPropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContentPropertyId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContentPropertyId"));

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContentPropertyId");

                    b.HasIndex("ContentId");

                    b.HasIndex("PropertyId");

                    b.ToTable("ContentProperties");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.DocumentType", b =>
                {
                    b.Property<int>("DocumentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DocumentTypeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("DocumentTypeId");

                    b.HasIndex("SiteId");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PropertyId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PropertyId"));

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PropertyId");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SiteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiteId"));

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageAlt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SiteId");

                    b.HasIndex("UserId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.AIConnectionModels.Chat", b =>
                {
                    b.HasOne("UCMS.Models.DbModels.SiteContentCreation.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.AIConnectionModels.Message", b =>
                {
                    b.HasOne("UCMS.Models.DbModels.AIConnectionModels.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.Code", b =>
                {
                    b.HasOne("UCMS.Models.DbModels.SiteContentCreation.DocumentType", "DocumentType")
                        .WithOne("Code")
                        .HasForeignKey("UCMS.Models.DbModels.SiteContentCreation.Code", "DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.Content", b =>
                {
                    b.HasOne("UCMS.Models.DbModels.SiteContentCreation.DocumentType", "DocumentType")
                        .WithMany("Contents")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.ContentProperty", b =>
                {
                    b.HasOne("UCMS.Models.DbModels.SiteContentCreation.Content", "Content")
                        .WithMany("ContentProperties")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("UCMS.Models.DbModels.SiteContentCreation.Property", "Property")
                        .WithMany("ContentProperties")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.DocumentType", b =>
                {
                    b.HasOne("UCMS.Models.DbModels.SiteContentCreation.Site", "Site")
                        .WithMany("DocumentTypes")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.Property", b =>
                {
                    b.HasOne("UCMS.Models.DbModels.SiteContentCreation.DocumentType", "DocumentType")
                        .WithMany("Properties")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.Site", b =>
                {
                    b.HasOne("UCMS.Models.DbModels.SiteContentCreation.User", "User")
                        .WithMany("Sites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.AIConnectionModels.Chat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.Content", b =>
                {
                    b.Navigation("ContentProperties");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.DocumentType", b =>
                {
                    b.Navigation("Code");

                    b.Navigation("Contents");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.Property", b =>
                {
                    b.Navigation("ContentProperties");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.Site", b =>
                {
                    b.Navigation("DocumentTypes");
                });

            modelBuilder.Entity("UCMS.Models.DbModels.SiteContentCreation.User", b =>
                {
                    b.Navigation("Sites");
                });
#pragma warning restore 612, 618
        }
    }
}
